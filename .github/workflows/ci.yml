name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      #############################################################
      ## Full test
      ##
      - uses: actions/checkout@v4
      - if: github.event_name != 'release' && github.event_name != 'workflow_dispatch'
        uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with: { tool: 'just,cargo-llvm-cov' }
      - if: github.event_name == 'release'
        name: Ensure this crate has not yet been published (on release)
        run: just check-if-published
      - run: RUST_BACKTRACE=1 just ci-test
      - run: just ci-build-thumbv7em-none-eabi
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
      #############################################################
      ## Code coverage
      ##
      - name: Generate code coverage
        run: just ci-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/llvm-cov/codecov.info
          fail_ci_if_error: true
      #############################################################
      ## Test MSRV
      ##
      - name: Read MSRV
        id: msrv
        run: echo "value=$(just get-msrv)" >> $GITHUB_OUTPUT
      - name: Install MSRV Rust ${{ steps.msrv.outputs.value }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ steps.msrv.outputs.value }}
      - run: just ci-test-msrv
      #############################################################
      ## Publish to crates.io
      ##
      - if: startsWith(github.ref, 'refs/tags/')
        name: Publish to crates.io
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
