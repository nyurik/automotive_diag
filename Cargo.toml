[package]
name = "automotive_diag"
version = "0.1.13"
description = "Unified Diagnostic Services/UDS (ISO-14229-1), KWP2000 (ISO-142330) and OBD-II (ISO-9141) definitions to communicate with the road vehicle ECUs in Rust."
authors = ["Yuri Astrakhan <YuriAstrakhan@gmail.com>", "Ashcon Mohseninia <ashconm@outlook.com>"]
repository = "https://github.com/nyurik/automotive_diag"
edition = "2021"
license = "MIT OR Apache-2.0"
keywords = ["uds", "kwp2000", "obd", "automotive", "no_std"]
categories = ["embedded", "no-std", "encoding", "parsing"]
rust-version = "1.66"

[features]
default = ["std", "iter", "display", "kwp2000", "obd2", "uds"]
# Include support for std library. Without this feature, uses `no_std` attribute
std = []
# Add Enum::iter() implementation for all enums
iter = []
# Add Display implementation for all enums, using doc comments as display strings
display = ["dep:displaydoc"]
# Include support for Keyword protocol 2000 - ISO-142330
kwp2000 = []
with-kwp2000 = ["kwp2000"] # deprecated, use `kwp2000` instead
# Include support for On-board diagnostics - ISO-9141
obd2 = []
with-obd2 = ["obd2"] # deprecated, use `obd2` instead
# Include support for Unified Diagnostic Services - ISO-14229-1
uds = []
with-uds = ["uds"] # deprecated, use `uds` instead
# Include support for serde serialization
serde = ["dep:serde"]

[dependencies]
displaydoc = { version = "0.2", optional = true }
serde = { version = "1", features = ["derive"], optional = true }
strum = { version = "0.27.0", features = ["derive"] }

[dev-dependencies]
insta = "1.43.1"
serde_json = { version = "1", features = ["preserve_order"] }
xxhash-rust = { version = "0.8", features = ["xxh3"] }

[lints.rust]
unsafe_code = "forbid"
unused_qualifications = "warn"

[lints.clippy]
cargo = { level = "warn", priority = -1 }
redundant_feature_names = "allow"  # All with-* features have been deprecated. Remove this once they are removed
pedantic = { level = "warn", priority = -1 }
missing_errors_doc = "allow"
module_name_repetitions = "allow"
unwrap_used = "warn"
